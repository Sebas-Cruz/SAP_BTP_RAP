managed;
//strict ( 2 ); //Uncomment this line in order to enable strict mode 2. The strict mode has two variants (strict(1), strict(2)) and is prerequisite to be future proof regarding syntax and to be able to release your BO.

define behavior for Z_I_TRAVEL_SCH alias Travel
implementation in class zbp_i_travel_sch unique
persistent table ztravel_sch
lock master
authorization master ( instance )
etag master last_changed_at
{
  // administrative fields: read only
  field ( readonly ) last_changed_at, last_changed_by, created_at, created_by;
  // mandatory fields that are required to create a travel
  field ( mandatory ) agency_id, overall_status, booking_fee, currency_code;
  // dynamic field control
  field (features : instance) travel_id;

  // Para asignar el valor numérico de forma automática
  //field (numbering : managed) <field>; Debe tener el mismo tipo de dato ABP_BEHV_PID

  create;
  update;
  delete;
  association _Booking { create; }
}

define behavior for Z_I_BOOKING_SCH alias Booking
implementation in class zbp_i_booking_sch
persistent table zbooking_sch
lock dependent by _Travel
authorization dependent by _Travel
etag master last_change_at
{
  // static fields control
  field ( readonly ) travel_id;
  field ( mandatory ) carrier_id, connection_id, flight_date, booking_status;
  update;
  delete;
  //association _Travel;
  association _BookingSupplement { create; }
}

define behavior for Z_I_BOOKSUPPL_SCH alias Supplement
implementation in class zbp_i_booksuppl_sch
with unmanaged save
lock dependent by _Travel
authorization dependent by _Travel
etag master last_changed_at
{
  field ( readonly ) travel_id, booking_id;
  field ( mandatory ) supplement_id, price;
  update;
  delete;
  association _Travel;
  association _Booking;
}